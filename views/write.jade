extends layout

block content
  script(src='/javascripts/editor.js')
  script(src='/javascripts/marked.js')
  link(rel='stylesheet', href='/stylesheets/editor.css')
  link(rel='stylesheet', href='/stylesheets/yue.css')
  style(type="text/css").
    .night, .night code, .night input {
      background-color: white;
      color: #333;
    }
  button#main-menu-button.menu-toggle-button
    span Menu
    button#save-button Save
  nav#cbp-spmenu-right.cbp-spmenu.cbp-spmenu-vertical.cbp-spmenu-right
    h3 POSTS
    span#post-menu-items
      if unpublishedPosts
        for up in unpublishedPosts
          a.menu-post-link(data-post-id="#{up._id}", onclick="displayPost(this)") #{up.title}
    h3
      a(href="/") HOME
  #post-editor.pure-g-r(data-post-id="#{post ? post._id : ''}")
    .pure-u-1
      .editor-wrapper
        input#post-title-editor.title(type='text', placeholder='Title', value="#{post ? post.title : ''}")
        textarea#editor(placeholder="Body here ....") !{post ? post.markdown : ''}

  script.
    var editor = new Editor(),
      socket;
    editor.render();
    window.onload = function() {
        socket = io.connect(window.location.hostname);
        socket.on('savedPost', function(data) {
          console.log(data.post);
          var done = false;
          if(data.post.published == false){
            for(i=0;i<unPubs.length;i++){
              if(unPubs[i]._id == data.post._id){
                unPubs[i] = data.post;
                done = true;
                updateList(unPubs);
                console.log('extant unpublished');
              }
            }
            if(done == false){
              unPubs.push(data.post);
              updateList(unPubs);
              console.log('new unpublished');
            }
          }else{
            alert('published');
              for(i=0;i<unPubs.length;i++){
                  if(data.post._id == unPubs[i]._id){
                      unPubs.splice(i, 1);
                  }
              }
              updateList(unPubs);
              console.log('published');
          }
        });
        saveButton.onclick = function(){
          saveCurrent();
        };
    };
    var saveCurrent = function(){
      var postEditor = document.getElementById('post-editor'),
          postID = postEditor.dataset.postId,
          title = document.getElementById('post-title-editor').value,
          body = editor.codemirror.getValue();
      if(body && title){
        var r = confirm("Publish this?");
        if(postID){
          socket.emit('updatePost', {
            markdown: body,
            title: title,
            _id: postID,
            published: r,
            time: (new Date)
          });
        }else{
          socket.emit('createPost', {
            markdown: body,
            title: title,
            published: r,
            time: (new Date)
          });
        }
      }else{
        alert('need both title and body!');
      }
    };
    var unPubs = !{JSON.stringify(unpublishedPosts) || '[]'},
      saveButton = document.getElementById('save-button'),
      displayPost = function(elem){
        for(i=0;i<unPubs.length;i++){
          if(unPubs[i]._id == elem.dataset.postId){
            document.getElementById('post-editor').dataset.postId = elem.dataset.postId;
            document.getElementById('post-title-editor').value = unPubs[i].title;
            editor.codemirror.setValue(unPubs[i].markdown);
          }
        }
      },
      listenToMenuPosts = function(){
        var menuPosts = document.getElementsByClassName('menu-post-link');
        for(i=0;i<menuPosts.length;i++){
          menuPosts[i].onclick = function(){
            displayPost(this);
          }
        }
      },
      updateList = function(unPubs){
        var menu = document.getElementById('post-menu-items');
        menu.innerHTML = '';
        for(i=0;i<unPubs.length;i++){
          menu.appendChild(
            create('a',{
              textContent: unPubs[i].title,
              className: 'menu-post-link',
              dataset:{
                postId: unPubs[i]._id
              }
            })
          );
        }
        listenToMenuPosts();
      };
    listenToMenuPosts();
