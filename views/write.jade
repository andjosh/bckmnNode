extends layout

block content
  #main
    #post-editor(data-post-id="#{post ? post._id : ''}")
      .pure-form
        label(for="post-image")
          h5.text-left(style="margin:0;font-size:1em;") Image
        input#post-image(name="post-image", type='text', placeholder='//image-url.jpg', value="#{post && post.image ? post.image : req.query.image || ''}")
        label(for="post-title")
          h5.text-left(style="margin:0;font-size:1em;") Title
        input#post-title-editor(name="post-title", type='text', placeholder='Title', value="#{post ? post.title : req.query.title || ''}", autofocus="autofocus")
        label(for="post-text")
          h5.text-left(style="margin:0;font-size:1em;") Text
        textarea#post-textarea(rows="15", name="post-text") !{post ? post.markdown : req.query.quote || ''}
        br
        .text-center
          button#save-button(type="submit") Yep
      br
      br
      div.text-center
        a(href="javascript:(function(){  function getSelectionHtml() {    var html = '';    if (typeof window.getSelection != 'undefined') {      var sel = window.getSelection();      if (sel.rangeCount) {        var container = document.createElement('div');        for (var i = 0, len = sel.rangeCount; i < len; ++i) {          container.appendChild(sel.getRangeAt(i).cloneContents());        }        html = container.innerHTML;      }    } else if (typeof document.selection != 'undefined') {      if (document.selection.type == 'Text') {        html = document.selection.createRange().htmlText;      }    }    return html;  }  var base = 'http://andjosh.com/javascripts/marklet.js',    s = document.createElement('script'),    key = prompt('Key into the lock...'),    k = document.createElement('span'),    q = document.createElement('span');  s.type = 'text/javascript';  s.src = base;  k.id = 'andjoshBlogKey';  k.className = key;  q.id = 'andjoshQuote';  q.innerHTML = getSelectionHtml();  document.body.appendChild(q);  document.body.appendChild(s);  document.body.appendChild(k);  window.andjoshWindow = window.open('http://example.com', 'andjoshWindow');})();") marklet
    text-center
      ul.unpub-list
        for p in postList
          li
            a(href="/w?key=#{req.query.key}&edit=#{p._id}") #{p.title}

  script.
    var socket;
    window.onload = function() {
        socket = io.connect(window.location.hostname);
        socket.on('savedPost', function(data) {
          console.log(data.post);
          var done = false;
          if(data.post.published == false){
            for(i=0;i<unPubs.length;i++){
              if(unPubs[i]._id == data.post._id){
                unPubs[i] = data.post;
                done = true;
                updateList(unPubs);
                console.log('extant unpublished');
              }
            }
            if(done == false){
              unPubs.push(data.post);
              updateList(unPubs);
              console.log('new unpublished');
            }
          }else{
            alert('published');
              for(i=0;i<unPubs.length;i++){
                  if(data.post._id == unPubs[i]._id){
                      unPubs.splice(i, 1);
                  }
              }
              updateList(unPubs);
              console.log('published');
          }
        });
        saveButton.onclick = function(){
          saveCurrent();
        };
    };
    function retrieveColors (parentEl) {
      var elements = parentEl.children,
        i = 0,
        length = elements.length,
        arr = [];
      for (; i < length; i++) {
        arr.push({
          red: parseInt(elements[i].dataset.red, 10),
          green: parseInt(elements[i].dataset.green, 10),
          blue: parseInt(elements[i].dataset.blue, 10),
          hex: elements[i].dataset.hex || ''
        });
      }
      return arr;
    }
    var saveCurrent = function(){
      var postEditor = document.getElementById('post-editor'),
          postID = postEditor.dataset.postId,
          title = document.getElementById('post-title-editor').value,
          body = document.getElementById('post-textarea').value,
          imageUrl = document.getElementById('post-image').value,
          colors = retrieveColors(document.getElementById('post-colors'));
      if(body && title){
        var r = confirm("Publish this?");
        if(postID){
          socket.emit('updatePost', {
            markdown: body,
            title: title,
            _id: postID,
            published: r,
            image: imageUrl,
            colors: colors,
            time: (new Date)
          });
        }else{
          socket.emit('createPost', {
            markdown: body,
            title: title,
            published: r,
            image: imageUrl,
            colors: colors,
            time: (new Date)
          });
        }
      }else{
        alert('need both title and body!');
      }
    };
    var unPubs = !{JSON.stringify(unpublishedPosts) || '[]'},
      saveButton = document.getElementById('save-button'),
      displayPost = function(elem){
        for(i=0;i<unPubs.length;i++){
          if(unPubs[i]._id == elem.dataset.postId){
            document.getElementById('post-editor').dataset.postId = elem.dataset.postId;
            document.getElementById('post-title-editor').value = unPubs[i].title;
            document.getElementById('post-image').value = unPubs[i].image || '';
            document.getElementById('post-colors').innerHTML = null;
            document.getElementById('post-textarea').innerHTML = unPubs[i].markdown;
          }
        }
      },
      updateList = function(unPubs){
        var menu = document.getElementById('post-menu-items');
        menu.innerHTML = '';
        for(i=0;i<unPubs.length;i++){
          menu.appendChild(
            create('a',{
              textContent: unPubs[i].title,
              className: 'menu-post-link',
              dataset:{
                postId: unPubs[i]._id
              }
            })
          );
        }
      };
